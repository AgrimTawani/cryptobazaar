// Prisma schema for Neon PostgreSQL
// Expects DATABASE_URL in .env pointing to Neon connection string

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model UserProfile {
  id         String   @id @default(cuid())
  clerkId    String?  @unique // Explicit Clerk user ID storage (optional to avoid breaking existing rows)
  email      String?
  firstName  String?
  lastName   String?
  address    String?
  age        Int?
  pan        String?
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt
  
  // Relations
  orders     Order[]  @relation("SellerOrders")
}

model Order {
  id              String      @id @default(cuid())
  sellerId        String
  seller          UserProfile @relation("SellerOrders", fields: [sellerId], references: [id], onDelete: Cascade)
  
  amount          Float       // Amount of USDC to sell
  rate            Float       // Rate in INR per USDC
  total           Float       // Total INR (amount * rate)
  walletAddress   String      // Seller's wallet address
  
  status          OrderStatus @default(ACTIVE)
  
  expiresAt       DateTime?   // When the order expires
  lockTxHash      String?     // Transaction hash of the lock
  unlockTxHash    String?     // Transaction hash of the unlock
  
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt
  
  @@index([sellerId])
  @@index([status])
  @@index([expiresAt])
}

enum OrderStatus {
  ACTIVE
  COMPLETED
  CANCELLED
}
